
service: capstone-lambda-service
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'alpha'}
  profile: ${env:PROFILE}
  apiName: ${env:PROJECT_NAME}
  region: ap-south-1
  memorySize: 1024
  timeout: 600
  endpointType: regional
  logs:
    restApi: true
    level: INFO
  deploymentBucket:
    blockPublicAccess: true
    name: ${env:CODE_DEPLOYMENT_BUCKET}
    maxPreviousDeploymentArtifacts: 3

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'
    environment:
      AWS_S3_ACCESS_KEY_ID: ${env:AWS_S3_ACCESS_KEY_ID}
      AWS_S3_SECRET_ACCESS_KEY: ${env:AWS_S3_SECRET_ACCESS_KEY}
      AWS_S3_REGION: ${env:AWS_S3_REGION}
      AWS_S3_BUCKET: ${env:AWS_S3_BUCKET}

package:
  individually: true
  patterns:
    - '!.venv/**'
    - '!venv/**'
    - '!env_*'
    - '!.env*'
    - '!.git/**'
    - '!.idea/**'
    - '!__pycache__/**'
    - '!config/**'
    # - '!node_modules/**'
    - '!layers/**'
    - '!*.pyc'
    - '!static/**'
    - '!client/**'
    - '!server/**'
    - '!test-reports/**'
    - '!media/**'
    - '!db.sqlite3'
    - '!*.ipynb'

plugins:
  - serverless-offline